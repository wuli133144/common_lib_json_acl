/*
 * =====================================================================================
 * 
 *        Filename:  sign.cpp
 * 
 *     Description:  
 * 
 *         Version:  1.0
 *         Created:  2006年05月25日 15时37分16秒 CST
 *        Revision:  none
 *        Compiler:  g++
 * 
 *          Author:  张明辉 (), minghui.zhang@yeelion.com
 *         Company:  亿览科技
 * 
 * =====================================================================================
 */

#include "sign.h"
#include "FileSignature.h"
using namespace std;

//=================================================================================================

#define MAX_PRIME_0	16777213
#define MAX_PRIME_1 13999981
#define MAX_PRIME_2 11999989

unsigned char rearr256_1[256]={
	103,198,105,115, 81,255, 74,236, 41,205,186,171,242,251,227, 70,
	124,194, 84,248, 27,232,231,141,118, 90, 46, 99, 51,159,201,154,
	102, 50, 13,183, 49, 88,163, 37, 93,  5, 23,233, 94,212,178,155,
	180, 17, 14,130,116, 65, 33, 61,220,135,112, 62,161,225,252,  1,
	126,151,234,107,150,143, 56, 92, 42,176, 59,175, 60, 24,219,  2,
	 26,254, 67,250,170, 58,209,230,148,117,216,190, 97,137,249,187,
	168,153, 15,149,177,235,241,179,239,247,  0,229,202, 11,203,208,
	 72, 71,100,189, 31, 35, 30, 28,123,197, 20, 75,121, 36,158,  9,
	172, 16, 80, 21,111, 34, 25,125,245,127,164, 19,181, 78,152,224,
	 77, 52,188, 95,119,108,134, 43, 85,162,  4,211, 54,226,240,228,
	 79, 73,253,169,  8,138, 10,213, 68, 91,243,142, 76,215, 45, 66,
	  6,196,132,173,222, 48,246, 32,133,  7,244,185,195,217,160,120,
	218,106, 83,144, 87,238,207, 96,210, 53,101, 63, 98,128,165, 89,
	140, 12,192,131, 47, 39, 22,147,184,109,182,193,199,237, 18, 69,
	 57,157,174,104,122,166, 55,110,  3, 40,139, 86,145,114,129,113,
	206,167,191,214,146,221,136, 38,156, 82,200, 29, 44,204,223, 64
};


unsigned char rearr256_2[256]={
	180,162,  8,135,  2,229,187, 61,199,230,152,228,223,220,206,244,
	209,156,226, 65,100,166, 96,175,234, 99,  6,164,211,129, 54, 35,
	 62, 15, 37,202, 98,235,176,250,207,144,214,157,132,168, 57,102,
	233,158, 13, 73, 77,247,173, 84,155,128,213,210,  7,248, 16, 22,
	 29, 52,225,127, 31,145,121,238, 33, 79,139,196, 12, 25, 42, 17,
	215,  4,172, 87,217,126, 95,143,117,195, 86,109,232,208,  9, 53,
	 91, 45,188, 14,130, 56, 50,147,103,198,224,160, 60,146, 59, 69,
	122, 21,112, 51,131,239, 18,197, 68,171,218,137, 80,105,240, 55,
	114,153, 81,254,193,189,200,  5,104,167,236,113,231, 48, 26, 44,
	151,163, 83, 20,203, 82,249, 19,216,116,108, 27, 90,119,150, 43,
	205, 88,115,142, 49, 89, 63,  0,178, 78, 28, 46, 66,177,138, 47,
	 10,251, 39, 64,149,246, 38,243,110,182,123, 32,107, 94, 36,227,
	 72,118, 34,136, 92,191,222, 41,185,  1,120,141,174,245,212, 40,
	184,181,133,204, 70,101,201,154,  3, 75,255,179,140,159,219, 76,
	237,170,148,186,252,165,106,241,161,194,192, 71, 97, 11,190,221,
	 67, 85,169,124,125, 93, 30, 23,242, 24,134, 74, 58,183,253,111,
};


unsigned int remain256_0[256]={
	       1,     256,   65536,       3,     768,  196608,       9,    2304,
	  589824,      27,    6912, 1769472,      81,   20736, 5308416,     243,
	   62208,15925248,     729,  186624,14221318,    2187,  559872, 9109528,
	    6561, 1679616,10551371,   19683, 5038848,14876900,   59049,15116544,
	11076274,  177147,11795206,16451609,  531441, 1831192,15800401, 1594323,
	 5493576,13846777, 4782969,16480728, 7985905,14348907,15887758, 7180502,
	 9492295,14108848, 4764293,11699672, 8772118,14292879, 1544590, 9539141,
	 9324211, 4633770,11840210,11195420,13901310, 1966204,   31834, 8149504,
	 5898612,   95502, 7671299,  918623,  286506, 6236684, 2755869,  859518,
	 1932839, 8267607, 2578554, 5798517, 8025608, 7735662,  618338, 7299611,
	 6429773, 1855014, 5121620, 2512106, 5565042,15364860, 7536318,16695126,
	12540154, 5831741,16530952, 4066036,  718010,16038430,12198108, 2154030,
	14560864, 3039898, 6462090,10128166, 9119694, 2609057,13607285,10581869,
	 7827171, 7267429,14968394, 6704300, 5025074,11350756, 3335687,15075222,
	  497842,10007061,11671240, 1493526,13243970, 1459294, 4480578, 6177484,
	 4377882,13441734, 1755239,13133646, 6770776, 5265717, 5846512, 3535115,
	15797151,  762323,10605345,13837027, 2286969,15038822, 7956655, 6860907,
	11562040, 7092752, 3805508, 1131694, 4501043,11416524, 3395082,13503129,
	  695146,10185246, 6954961, 2085438,13778525, 4087670, 6256314, 7781149,
	12263010, 1991729, 6566234, 3234604, 5975187, 2921489, 9703812, 1148348,
	 8764467,12334223, 3445044, 9516188, 3448243,10335132,11771351,10344729,
	14228183, 1759627,14256974, 9130123, 5278881, 9216496,10613156,15836643,
	10872275,15062255,13955503,15839612,11632339, 8312083,13964410, 1342591,
	 8159036, 8338804, 4027773, 7699895, 8239199,12083319, 6322472, 7940384,
	 2695531, 2190203, 7043939, 8086593, 6570609, 4354604, 7482566, 2934614,
	13063812, 5670485, 8803842, 5637010,  234242, 9634313,  133817,  702726,
	12125726,  401451, 2108178, 2822752, 1204353, 6324534, 8468256, 3613059,
	 2196389, 8627555,10839177, 6589167, 9105452,15740318, 2990288,10539143,
	13666528, 8970864,14840216, 7445158,10135379,10966222, 5558261,13628924,
	16121453,16674783, 7332346,14809933,16469923, 5219825,10875373,15855343,
	15659475,15848906,14011603,13423999,13992292, 8480383, 6717571, 8422450,
	 8663936, 3375500, 8490137, 9214595,10126500, 8693198,10866572,13602287
};


unsigned int remain256_1[256]={
	       1,     256,   65536, 2777235,10973110, 9119960,10712914,12509689,
	10484716,10090925, 7280296, 1758303, 2126176,12301778,13259424, 6417142,
	 4790575, 8388853, 5549275, 6616319,13779944,13670433,13635579, 4712955,
	 2518114,  638058, 9343057,11825822, 3414536, 6122394,13334973,11757705,
	13976546, 8000621, 4161750, 1409444,10818139,11447327, 4519683, 9040406,
	 4347071, 6851677, 4031687,10113259,12997800, 9441303, 8976836, 2073132,
	12722495, 8963128,12563865,10353791, 4574087, 8967849,13772441,11749665,
	11918306,13090459, 5162045, 5485306, 4240236, 7501879, 2483627, 5809367,
	 3199966, 7192398, 7256377, 9635020, 2568464,13527658, 5085141,13797844,
	 4252852,10731575, 3286924, 1453684, 8143598,12763900, 5562827,10085631,
	 5925032, 4810244,13424117, 6578607, 4125672, 6173457,12407120,12227014,
	 8119821, 6676988, 1311246,13679413, 1934478, 5227033, 8122253, 7299580,
	 6695007, 5924110, 4574212, 8999849, 7964460, 8904515,11558918, 5087017,
	  278119, 1198559,12831503, 8869214, 2521862, 1597546, 2972327, 4916738,
	12686619,13778853,13391137,12135708,12745447,  838859, 4748189,11538018,
	13736598, 2573857,  908285, 8521264,11446529, 4315395,12742602,  110539,
	  298022, 6293727, 1196297,12252431,  626592, 6407761, 2389039, 9594801,
	 6272381, 9731702,13319075, 7687817, 8083812,11458665, 7422211,10088581,
	 6680232, 2141710, 2278501, 9297035,   44190,11312640,12039754, 2181204,
	12388965, 7579334, 8312126,13907125, 4228826, 4580919,10716841,13515001,
	 1844949,10307571, 6741748, 3889825, 1796549,11917152,12795035,13533387,
	 6551765,11254101,11053751, 1764094, 3608672,13821267,10249140, 5783393,
	10550603,12958016,13256580, 5689078,  405944, 5921797, 3982084,11414872,
	10211184,10066638, 1062824, 6083305, 3328189,12017524,10490305,11521709,
	 9561494,11745770,10921186, 9827397, 9817033, 7163849,13947814,  645229,
	11178833, 5785124,10993739,  401003, 4656901, 2168271, 9078117,    1106,
	  283136, 2482911, 5626071,12276114, 6689440, 4498958, 3734806, 4111628,
	 2578193, 2018301,12685740,13553829,11784917, 6942837,13368666, 6383132,
	10083996, 5506472, 9658732, 8638736,13519399, 2970837, 4535298,13037846,
	 5693098, 1435064, 3376878,10481927, 9376941, 6500145,12039362, 2080852,
	  698834,10901732, 4847173, 8877960, 4760838,  776181, 2702602, 5867043,
	 3965041, 7051864,13279616,11586294,12095273, 2394087,10887089, 1098565,
};



unsigned int remain256_2[256]={
	       1,     256,   65536, 4777227,10971223,  635662, 6729615, 6783013,
	 8452912, 3947452, 2548636, 4451410,11561994, 7873170,11533357,  542098,
	 6777209, 6967088, 7576156, 7497707,11414741, 6176369, 9151905, 2889825,
	 7795871, 3744802,10670181, 7568833, 5623019,11494173, 2510983, 6812231,
	 3932731,10780049,11695063, 5938867, 8351338, 1944486, 5788867, 5951305,
	11535466, 1082002,  992765, 2148071, 9906671, 4110097, 8185789, 7563898,
	 4359659,   73727, 6874123, 7777094,10937879, 4099587, 5495229, 2779911,
	 3657865,  414298,10060376, 7458610, 1405909,11913023, 1736682,  590999,
	 7295876, 7745961, 2967831, 3765429, 3950704, 3381148, 1574680, 7118443,
	10323069, 2708084, 9270131, 9155703, 3862113, 4701830, 3669580, 3413338,
	 9815320, 4724219, 9401164, 6700184,11248666,11661125, 9250728, 4188535,
	 4265939,   81385, 8834571, 5652244, 6975784, 9802332, 1399291,10218815,
	   19038, 4873728,11675501,  930995,10334929, 5744244, 6527806, 3119865,
	 6686166, 7660058, 4976641, 2021262, 1443545, 9547850, 8251833,  471184,
	  623214, 3542927, 6990137, 1476711, 6038357, 9820800, 6127099, 8538774,
	 1928146, 1605827, 3092086,11574731,11133842, 6266159, 8138167, 7372655,
	 3401407, 6760984, 2813488,  253588, 4918583,11158392,  550970, 9048441,
	  403019, 7172952,  277395,11013175,11375374, 8098406, 9193828, 1622124,
	 7264118,11615902, 9673629, 4451290,11531274,    8850, 2265600, 3994128,
	 2497703, 3412551, 9613848, 1147343, 5720072,  339774, 2982221, 7449269,
	11014602,11740686, 5618366,10303005, 9571689, 2354628, 2785318, 5042057,
	 6767769, 4550448,  915755, 6433489, 2974691, 5521589, 9528071, 3188409,
	  233452,11763756,11524286,10219911,  299614, 4701250, 3521100, 1402425,
	11021119, 1409049,  716874, 3519909, 1097529, 4967677,11726467, 1978302,
	 2445774, 2118716, 2391791,  299057, 4558658, 3017515, 4484544, 8044309,
	 7344985, 8317876, 5378203, 8821222, 2234900, 8134917, 6540655, 6409209,
	 8759000,10306046,10350185, 9649780,10345935, 8561780, 7817682, 9328418,
	   77197, 7762443, 7187223, 3930771,10278289, 3244393, 2565367, 8734546,
	 4045822, 3731378, 7233637, 3812766, 4068987, 9661618, 1376474, 4377663,
	 4682751,10785345, 1050850, 5017842,  568729, 1594756,  257910, 6025015,
	 6405248, 7744984, 2717719,11736691, 4595646,  486454, 4532334, 8278560,
	 7313296,  205492, 4605996, 3136054,10830550,  623341, 3575439, 3313220,
};


int YeeSign::creat_sign_f64(char* psrc,int slen,u_int* sign1,u_int * sign2)
{
	assert( strlen(psrc) == (u_int) slen);
	*sign1=0;
	*sign2=0;
	if( slen <= 4 )
	{
		memcpy(sign1,psrc,slen);
		return 1;
	}
	else 
		if(slen<=8)
		{
			memcpy(sign1,psrc,4);
			memcpy(sign2,psrc+4,slen-4);
			return 1;
		}
		else
		{
			(*sign1)=getsign_24_1(psrc);
			(*sign2)=getsign_24_2(psrc);
			return 1;
		}
}


int YeeSign::creat_sign_fs64(char* psrc,int slen,u_int* sign1,u_int * sign2)
{
	assert( strlen(psrc) == (u_int) slen);
	*sign1=0;
	*sign2=0;
	if( slen <= 4 )
	{
		memcpy(sign1,psrc,slen);
		return 1;
	}
	else 
		if(slen<=8)
		{
			memcpy(sign1,psrc,4);
			memcpy(sign2,psrc+4,slen-4);
			return 1;
		}
		else
		{
			(*sign1)=getsigns_24_1(psrc,slen);
			(*sign2)=getsigns_24_2(psrc,slen);
			return 1;
		}
}
//=========================================================================================


static unsigned int Mod_Prime_List_1[256]={
       256,     65536,         3,       768,    196608,         9,      2304,    589824,
        27,      6912,   1769472,        81,     20736,   5308416,       243,     62208,
  15925248,       729,    186624,  14221318,      2187,    559872,   9109528,      6561,
   1679616,  10551371,     19683,   5038848,  14876900,     59049,  15116544,  11076274,
    177147,  11795206,  16451609,    531441,   1831192,  15800401,   1594323,   5493576,
  13846777,   4782969,  16480728,   7985905,  14348907,  15887758,   7180502,   9492295,
  14108848,   4764293,  11699672,   8772118,  14292879,   1544590,   9539141,   9324211,
   4633770,  11840210,  11195420,  13901310,   1966204,     31834,   8149504,   5898612,
     95502,   7671299,    918623,    286506,   6236684,   2755869,    859518,   1932839,
   8267607,   2578554,   5798517,   8025608,   7735662,    618338,   7299611,   6429773,
   1855014,   5121620,   2512106,   5565042,  15364860,   7536318,  16695126,  12540154,
   5831741,  16530952,   4066036,    718010,  16038430,  12198108,   2154030,  14560864,
   3039898,   6462090,  10128166,   9119694,   2609057,  13607285,  10581869,   7827171,
   7267429,  14968394,   6704300,   5025074,  11350756,   3335687,  15075222,    497842,
  10007061,  11671240,   1493526,  13243970,   1459294,   4480578,   6177484,   4377882,
  13441734,   1755239,  13133646,   6770776,   5265717,   5846512,   3535115,  15797151,
    762323,  10605345,  13837027,   2286969,  15038822,   7956655,   6860907,  11562040,
   7092752,   3805508,   1131694,   4501043,  11416524,   3395082,  13503129,    695146,
  10185246,   6954961,   2085438,  13778525,   4087670,   6256314,   7781149,  12263010,
   1991729,   6566234,   3234604,   5975187,   2921489,   9703812,   1148348,   8764467,
  12334223,   3445044,   9516188,   3448243,  10335132,  11771351,  10344729,  14228183,
   1759627,  14256974,   9130123,   5278881,   9216496,  10613156,  15836643,  10872275,
  15062255,  13955503,  15839612,  11632339,   8312083,  13964410,   1342591,   8159036,
   8338804,   4027773,   7699895,   8239199,  12083319,   6322472,   7940384,   2695531,
   2190203,   7043939,   8086593,   6570609,   4354604,   7482566,   2934614,  13063812,
   5670485,   8803842,   5637010,    234242,   9634313,    133817,    702726,  12125726,
    401451,   2108178,   2822752,   1204353,   6324534,   8468256,   3613059,   2196389,
   8627555,  10839177,   6589167,   9105452,  15740318,   2990288,  10539143,  13666528,
   8970864,  14840216,   7445158,  10135379,  10966222,   5558261,  13628924,  16121453,
  16674783,   7332346,  14809933,  16469923,   5219825,  10875373,  15855343,  15659475,
  15848906,  14011603,  13423999,  13992292,   8480383,   6717571,   8422450,   8663936,
   3375500,   8490137,   9214595,  10126500,   8693198,  10866572,  13602287,   9302381
};

static unsigned int Mod_Prime_List_2[256]={
  15824477,   7761153,   7145686,    580925,  14499208,   4036269,   9875725,  11605750,
   1507777,    115335,  12748561,   8855010,   1960695,  15399149,  16317578,  16554616,
  10127548,   8963642,  12993288,   4396326,   1387123,   2782309,   7628746,   6803892,
  13744855,  12248289,  15002970,  15558948,   6894525,   3392505,  12844131,  16543731,
   7340988,    246640,  12808243,   7356403,   4192880,  16413743,   7618458,   4170164,
  10598447,  12073393,   3783992,  12401609,   3921293,  13996267,   9500965,  16330384,
   3055753,  10521614,   9181344,   1616204,  11095448,   5088057,  10698269,   4073427,
   2610974,  14098583,   2139463,  10832160,   4795125,   2816473,  16374730,  14408329,
  14325643,   9935226,  10060807,   8655145,   1126852,   3261729,  12919873,   2379285,
   5117796,   1534254,   6893447,   3116537,   9305119,  16525405,   2649532,   7192232,
  12496701,  11487646,   4827551,  11117529,  10740793,  14959571,   4448804,  14821491,
   2654722,   8520872,    307362,  11575876,  10637232,   5225154,  12240703,  13060954,
   4941623,   6765563,   3932631,    121596,  14351377,  16523130,   2067132,   9092623,
  12458026,   1586846,   3579800,  10460054,  10199183,  10525003,  10048928,   5614121,
  11153061,   3059786,  11554062,   5052848,   1684765,  11869865,   2012421,  11863806,
    461317,    656759,    358314,   7842389,  11164903,   6091338,  15880220,   5254162,
   2889552,   1528556,   5434759,  15567986,   9208253,   8504908,  12997777,   5545510,
  10365844,   2858622,  10387675,   8447358,  15042176,   8818485,   9387494,   4059007,
  15696653,   8592607,   1894323,  15185116,  11856727,  15426292,   6488987,    237971,
  10588979,   9649585,   4045507,  12240653,  13048154,   1664823,   6764713,   3715031,
  11524792,  14336927,  12823930,  11372275,   8846973,  16680422,   8779486,  16180949,
  15131990,  15033670,   6640949,   5585845,   3914405,  12232939,  11073370,  16213288,
   6633575,   3698101,   7190712,  12107581,  12536120,   4801711,   4502489,  11787652,
  14520291,   9433517,  15840895,  11964161,   9374998,    860031,   2064349,   8380175,
  14620527,   1539535,   8245383,  13668173,   9394896,   5953919,  14255354,   8718441,
    553429,   7460232,  13995905,   9408293,   9383551,   3049599,   8946190,   8525576,
   1511586,   1090439,  10717200,   8919763,   1760264,  14420410,    641180,  13147289,
  10266184,  10900060,   5400326,   6753138,    751831,   7919547,  14140152,  12781127,
    414707,   5501798,  15952771,   7050019,   9644571,   2761923,   2409930,  12962916,
  13398293,   7414412,   2265985,   9667394,   8604611,   4967347,  13350907,  12060795,
    558904,   8861832,   3707127,   9501368,  16433552,  12689562,  10528465,  10935200,
  14396166,  11211915,   1349211,   9854036,   6053366,   6159388,  16523821,   2244028
};

/*
static unsigned int Mod_Prime_List_3[256]={
   4046946,  12610013,   6944192,  16108937,  13478037,  11054957,  11502248,   8568463,
  12492738,  10476158,  14324351,   9607962,  10169554,   2942459,  15073452,     51622,
  13215232,  10885609,   1703526,  16673081,   6904254,   5884809,  13341817,   9737003,
   9649684,   4073203,   2554622,  16450278,    198235,    416611,   5989318,   6541755,
  13748163,  13098481,  14551719,    705438,  12820298,  10445603,   6502271,   3640259,
   9161239,  13248747,   2688266,    331593,   1001893,   4826863,  10942569,  16285286,
   8291832,   8783934,    544582,   5195528,   4657711,   1194023,   3680594,   2709816,
   5848393,   4019321,   5538013,   8447956,  15197312,  14982599,  10347620,  14972989,
   7887460,   5927800,   7570330,   8628435,  11068387,  14940328,  16303427,  12935928,
   6492517,   1143235,   7456049,  12926865,   4172389,  11169055,   7156970,   3471373,
  16257972,   1299448,  13892211,  16420403,   9327418,   5459022,   5003443,   5815500,
  12375896,  14118972,   7362487,   5752176,  12942135,   8081509,   5272795,   7660880,
  15032052,   6230405,   1151295,   9519409,   4277169,   4438369,  12151203,   6929113,
  12248713,  15114490,  10557350,   1555137,  12239863,  12848890,    987972,   1263087,
   4583795,  15825893,   8127505,    270588,   2161796,  16549920,   8929404,   4230536,
   9277504,   9458221,   5390224,   4168338,  10131999,  10105562,   3337690,  15589490,
  14717069,   9480672,  11137680,  15902153,  10872882,  15222597,   4678376,   6484263,
  15807394,   3391761,  12654483,   1551329,  11265015,  14945547,    862308,   2647469,
   6664744,  11678981,   3480562,   1833173,  16308347,  14195448,  10163160,   1305595,
  15465843,  16617803,   9530269,   7057329,  11517643,  12509583,  14788478,  10984193,
  10163847,   1481467,  10157526,  16640474,  15334045,  16431881,  12265786,   2707995,
   5382217,   2118546,   5477920,   9841331,   2803286,  12999530,   5997446,   8622523,
   9554915,  13366705,  16108331,  13322901,   4894507,  11482250,   3448975,  10524084,
   9816224,  13153077,  11751112,   5168915,  14621966,   1911487,   2802365,  12763754,
  12747522,   8592130,   1774307,   1238651,  15105362,   8220582,   7321117,  11938639,
   2844278,   6716299,   8099878,   9975259,   3534488,  15638229,  10417070,  15975006,
  12746067,   8219650,   7082525,   1190636,   2813522,  15619946,   5736622,   8960311,
  12142728,   4759513,  10478152,  14834815,   6069282,  10235356,   3010588,  15737293,
   2223088,  15463489,  16015179,   6253172,   6979647,   8408234,   5028480,  12224972,
   9036794,  14945193,    771684,  13002091,   6653062,   8688389,   9639428,   1447667,
   1504726,  16111830,  14218645,  16101592,  11597717,  16231344,  11259863,  13626635,
  15541679,   2477453,  13472197,   9559917,  14647217,   8375743,  13487967,  13597037
};
*/

inline u_int YeeSign::getSign1(const char *src, int len)
{
	int tLen = (len==-1)?strlen(src):len;
	u_int tRet = 0;

	for (int i = 0; i < tLen; i++)
		tRet += (unsigned char)src[i]*Mod_Prime_List_1[0xFF & i];

	return tRet;
}

inline u_int  YeeSign::getSign2(const char *src, int len)
{
	int tLen = (len==-1)?strlen(src):len;
	u_int tRet = 0;

	for (int i = 0; i < tLen; i++)
		tRet += (unsigned char)src[i]*Mod_Prime_List_2[0xFF & i];

	return tRet;
}


void  YeeSign::getSign(u_int &sign1, u_int &sign2, const char *src, int len)
{
	sign1 = sign2 = 0;

	int tLen = (len == -1)?strlen(src):len;
	if (tLen <= 4)
	{
		memcpy(&sign1, src, tLen);
	}
	else if (tLen <= 8)
	{
		memcpy(&sign1, src, 4);
		memcpy(&sign2, src+4, tLen-4);
	}
	else
	{
		sign1 = getSign1(src, len);
		sign2 = getSign2(src, len);
	}

	return;
}

void  YeeSign::getSign(T_Sign &sign, const char *src, int len)
{
	getSign(sign.sign1, sign.sign2, src, len);

	return;
}


T_Sign*  YeeSign::getSign(T_Sign *sign, const char *src, int len)
{
	getSign(sign->sign1, sign->sign2, src, len);
	return sign;
}
void YeeSign::reverse_byte_order(unsigned char* buf)
{
	unsigned char *p1, *p2, *p3, *p4;
	p1 = buf;
	p2 = buf + 1;
	p3 = buf + 2;
	p4 = buf + 3;

	unsigned char t;
	t = *p1;
	*p1 = *p4;
	*p4 = t;

	t = *p2;
	*p2 = *p3;
	*p3 = t;
}
bool  YeeSign::getOldsig(const char* path, unsigned int* nsig1, unsigned int* nsig2)
{
	return FileSignature::CompFileSign( path, *nsig1, *nsig2);
}
bool YeeSign::getNewsig(const char* path, unsigned int* nsig1, unsigned int* nsig2)
{
	int fd = open(path, O_RDONLY);
	if(fd < 0) {
		perror(path);
		return false;
	}

	int BUFSIZE = 8192;
	char* buf = new char[BUFSIZE];
	if(buf == NULL) {
		cerr<<"Failed to create buf!"<<endl;
		return false;
	}

	MD5_CTX ctx;
	MD5_Init(&ctx);
        while(1) {
                int nread = read(fd, buf, BUFSIZE);
		if(nread == 0) {
			break;
		}else if(nread < 0) {
			perror("read");
			return false;
		}else {
			MD5_Update(&ctx, buf, nread);			
		}
        }

        close(fd);

	unsigned char* md5val = new unsigned char[16];
	MD5_Final(md5val, &ctx);
	reverse_byte_order(md5val);
	reverse_byte_order(md5val+4);
	reverse_byte_order(md5val+8);
	reverse_byte_order(md5val+12);

	unsigned int* md5uint = (unsigned int*)md5val;
/*
	printf("%08x%08x%08x%08x\n", md5uint[0],md5uint[1],md5uint[2],md5uint[3]);
	printf("%u,%u,%u,%u\n", md5uint[0],md5uint[1],md5uint[2],md5uint[3]);
	printf("%u,%u\n", md5uint[0]^md5uint[1],md5uint[2]^md5uint[3]);
*/
	*nsig1 = md5uint[0] ^ md5uint[1];
	*nsig2 = md5uint[2] ^ md5uint[3];

	delete [] buf;
	delete [] md5val;

	return true;
}



#ifdef _TEST

#include <iostream>
#include <string>

#include "ul_sign.h"

using namespace std;

static struct 
{
	char *src;
	int  len;
} tests[] = {
	{ "a", -1 },
	{ "中", -1 },
	{ "中华", -1 },
	{ "中华人", -1 },
	{ "中华人民", -1 },
	{ "明月几时有", -1 },
	{ "把酒问青天", -1 },
	{ "不知天上宫阙", -1 },
	{ "今夕是何年", -1 },
	{ "我欲乘风归去", -1 },
};

#define ArraySize(array) (sizeof(array)/sizeof(*array))

int main()
{
	T_Sign sign;
	u_int sign1, sign2;
	
	cout << "\033[32;1m\t\t   NEW\t\t\t\t   OLD\t\t\tequal\033[m" << endl;

	for (size_t i = 0; i < ArraySize(tests); i++)
	{
		cout << "\033[33;1m" << tests[i].src << "\033[m" << endl;

		//! new sign fun.
		YeeSign::getSign(sign, tests[i].src);

		//! old sign fun.
		creat_sign_f64(tests[i].src, strlen(tests[i].src), &sign1, &sign2);

		cout << "sign1 :\t\t" << sign.sign1 << ((sign1<10000000)?"\t":"") << "\t\t\t" << sign1 
			<< ((sign1<10000000)?"\t":"") << "\t\t\033[34;1m "
			<< ((sign.sign1==sign1)?"YES":"NO") << "\033[m" << endl;

		cout << "sign2 :\t\t" << sign.sign2 << ((sign2<10000000)?"\t":"") << "\t\t\t" << sign2 
			<< ((sign2<10000000)?"\t":"") << "\t\t\033[34;1m "
			<< ((sign.sign2==sign2)?"YES":"NO") << "\033[m" << endl << endl;
	}

	return 0;
}
#endif //_TEST
